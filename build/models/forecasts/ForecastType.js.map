{"version":3,"sources":["../../../server/models/forecasts/ForecastType.js"],"names":[],"mappings":";;;;;;AAAA,kCAMiB;;kBAEF,+BAAsB;AACnC,MAAI,EAAE,UAAU;AAChB,aAAW,EAAE,4BAA4B;AACzC,QAAM,EAAE,kBAAM;AACZ,WAAO;AACL,QAAE,EAAE,EAAC,IAAI,qBAAY,EAAC;AACtB,WAAK,EAAE,EAAC,IAAI,wBAAe,EAAC;AAC5B,cAAQ,EAAE,EAAC,IAAI,qBAAY,EAAC;AAC5B,eAAS,EAAE,EAAC,IAAI,wBAAe,EAAC;AAChC,YAAM,EAAE,EAAC,IAAI,wBAAe,EAAC;AAC7B,cAAQ,EAAE,EAAC,IAAI,uBAAc,EAAC;AAC9B,cAAQ,EAAE,EAAC,IAAI,wBAAe,EAAC;AAC/B,iBAAW,EAAE;AACX,YAAI,wBAAe;AACnB,eAAO,mBAAC,QAAQ,EAAC;AACf,iBAAO,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;SAC5C;OACF;AACD,eAAS,EAAE,EAAC,IAAI,wBAAe,EAAC;AAChC,YAAM,EAAE,EAAC,IAAI,wBAAe,EAAC;AAC7B,cAAQ,EAAE,EAAC,IAAI,qBAAY,EAAC;AAC5B,cAAQ,EAAE,EAAC,IAAI,wBAAe,EAAC;AAC/B,eAAS,EAAE;AACT,YAAI,wBAAe;AACnB,eAAO,mBAAC,QAAQ,EAAC;AACf,iBAAO,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;SACtC;OACF;AACD,gBAAU,EAAE,EAAC,IAAI,yBAAgB,EAAC;AAClC,eAAS,EAAE;AACT,YAAI,wBAAe;AACnB,eAAO,mBAAC,QAAQ,EAAC;AACf,iBAAO,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;SACtC;OACF;;KAEF,CAAC;GACH;CACF,CAAC","file":"ForecastType.js","sourcesContent":["import {\r\n  GraphQLObjectType,\r\n  GraphQLInt,\r\n  GraphQLString,\r\n  GraphQLFloat,\r\n  GraphQLBoolean\r\n} from 'graphql';\r\n\r\nexport default new GraphQLObjectType({\r\n  name: 'Forecast',\r\n  description: 'This represents a forecast',\r\n  fields: () => {\r\n    return {\r\n      id: {type: GraphQLInt},\r\n      bunit: {type: GraphQLString},\r\n      party_id: {type: GraphQLInt},\r\n      portfolio: {type: GraphQLString},\r\n      season: {type: GraphQLString},\r\n      position: {type: GraphQLFloat},\r\n      currency: {type: GraphQLString},\r\n      settle_date: {\r\n        type: GraphQLString,\r\n        resolve(forecast){\r\n          return forecast.settle_date.toDateString();\r\n        }\r\n      },\r\n      reference: {type: GraphQLString},\r\n      status: {type: GraphQLString},\r\n      tran_num: {type: GraphQLInt},\r\n      mongo_id: {type: GraphQLString},\r\n      updatedAt: {\r\n        type: GraphQLString,\r\n        resolve(forecast){\r\n          return forecast.updatedAt.toString();\r\n        }\r\n      },\r\n      hasChanged: {type: GraphQLBoolean},\r\n      createdAt: {\r\n        type: GraphQLString,\r\n        resolve(forecast){\r\n          return forecast.createdAt.toString();\r\n        }\r\n      }\r\n\r\n    };\r\n  }\r\n});\r\n"]}